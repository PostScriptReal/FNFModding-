trace(": )");
// char is a Character
function init(char) {
    trace(": )");
    var tex = FlxAtlasFrames.fromSpriteSheetPacker(hscriptPath + 'char.png', hscriptPath + 'char.txt');
    trace(": )");
    char.frames = tex;
    char.animation.addByPrefix('idle', 'idle spirit_', 24, false);
    char.animation.addByPrefix('singUP', 'up_', 24, false);
    char.animation.addByPrefix('singLEFT','left_', 24, false);
    char.animation.addByPrefix('singRIGHT', 'right_', 24, false);
    char.animation.addByPrefix('singDOWN', 'spirit down_', 24, false);
    

    char.addOffset('idle', -220, -280);
    char.addOffset('singUP', -220, -240);
    char.addOffset('singRIGHT', -220, -280);
    char.addOffset('singLEFT', -200, -280);
    char.addOffset('singDOWN', 170, 110);

    char.playAnim('idle');

    char.flipX = false;

    char.enemyOffsetX = -150;
    char.enemyOffsetY = 100;
    char.camOffsetX = 300;
    char.camOffsetY = 0;

    char.setGraphicSize(Std.int(char.width * 6));
    char.updateHitbox();
    char.antialiasing = false;
    char.isPixel = true;
}
portraitOffset = [0, 0];
dadVar = 4.0;
isPixel = true;
function update(elapsed, char) {
    if (dynaCam) {
        if (char.animation.curAnim.name == 'singUP') {
    		char.followCamX = 0;
    		char.followCamY = 0 + -15;
    	}
    	if (char.animation.curAnim.name == 'singDOWN') {
    		char.followCamX = 0;
    		char.followCamY = 0 + 15;
    	}
    	if (char.animation.curAnim.name == 'singLEFT') {
    		char.followCamX = 0 + -15;
    		char.followCamY = 0;
    	}
    	if (char.animation.curAnim.name == 'singRIGHT') {
    		char.followCamX = 0 + 15;
    		char.followCamY = 0;
    	}
    	if (char.animation.curAnim.name != 'singUP' && char.animation.curAnim.name != 'singDOWN' && char.animation.curAnim.name != 'singLEFT' && char.animation.curAnim.name != 'singRIGHT') {
    		char.followCamX = 0;
    		char.followCamY = 0;
    	}
    }
}
var danced = false;
function dance(char) {
    trace(": )");
    char.playAnim('idle');
}
trace("done");