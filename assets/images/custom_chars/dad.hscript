trace(": )");
// char is a Character
function init(char) {
    trace(": )");
    var tex = FlxAtlasFrames.fromSparrow(hscriptPath + 'char.png', hscriptPath + 'char.xml');
    trace(": )");
    char.frames = tex;
    char.animation.addByPrefix('idle', 'Dad idle dance', 31, false);
    char.animation.addByPrefix('singUP', 'Dad Sing Note UP', 24, false);
    char.animation.addByPrefix('singLEFT','Dad Sing Note LEFT', 24, false);
    char.animation.addByPrefix('singRIGHT', 'Dad Sing Note RIGHT', 24, false);
    char.animation.addByPrefix('singDOWN', 'Dad Sing Note DOWN', 24, false);
    trace("finish anim");

    char.addOffset('idle', 0);
    char.addOffset('singUP', -6, 50);
    char.addOffset('singRIGHT',0, 27);
    char.addOffset('singLEFT', -10, 10);
    char.addOffset('singDOWN', 0, -30);

    char.playAnim('idle');

    char.flipX = false;

    char.enemyOffsetX = 0;
    char.enemyOffsetY = 0;
    char.playerOffsetX = 0;
    char.playerOffsetY = 0;
    char.followCamX = 259;
    char.followCamY = -100;
    char.midpointX = 0;
    char.midpointY = 0;
}
portraitOffset = [0, 0];
dadVar = 6.1;
isPixel = false;
function update(elapsed, char) {
    if (dynaCam) {
        if (char.animation.curAnim.name == 'singUP') {
    		char.followCamX = 259;
    		char.followCamY = -100 + -15;
    	}
    	if (char.animation.curAnim.name == 'singDOWN') {
    		char.followCamX = 259;
    		char.followCamY = -100 + 15;
    	}
    	if (char.animation.curAnim.name == 'singLEFT') {
    		char.followCamX = 259 + -15;
    		char.followCamY = -100;
    	}
    	if (char.animation.curAnim.name == 'singRIGHT') {
    		char.followCamX = 259 + 15;
    		char.followCamY = -100;
    	}
    	if (char.animation.curAnim.name != 'singUP' && char.animation.curAnim.name != 'singDOWN' && char.animation.curAnim.name != 'singLEFT' && char.animation.curAnim.name != 'singRIGHT') {
    		char.followCamX = 259;
    		char.followCamY = -100;
    	}
    }
}
var danced = false;
function dance(char) {
    trace(": )");
    char.playAnim('idle');
}
trace("done");